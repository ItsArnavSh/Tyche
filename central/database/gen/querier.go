// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package database

import (
	"context"
)

type Querier interface {
	CleanupOldEntries(ctx context.Context) error
	GetAverageDocLength(ctx context.Context) (float64, error)
	GetDFI(ctx context.Context, wordID int32) (int32, error)
	GetDocSizeByLID(ctx context.Context, lid int32) (int32, error)
	GetFreqList(ctx context.Context, wordID int32) ([]Invertedindex, error)
	GetHeadline(ctx context.Context, lid int32) (string, error)
	GetRelevantChunks(ctx context.Context, arg GetRelevantChunksParams) ([]int32, error)
	GetTotalDocs(ctx context.Context) (int64, error)
	// fallback query if INSERT returns nothing:
	GetWordID(ctx context.Context, word string) (int32, error)
	InsertFreq(ctx context.Context, arg InsertFreqParams) error
	//
	//id = db.InsertOrGetWord(word)
	//if id == nil:
	//    id = db.GetWordID(word)
	InsertLivefeed(ctx context.Context, arg InsertLivefeedParams) error
	InsertWord(ctx context.Context, word string) (int32, error)
	UpsertVector(ctx context.Context, arg UpsertVectorParams) error
	UpsertWordAndIncrementDFI(ctx context.Context, arg UpsertWordAndIncrementDFIParams) (int32, error)
}

var _ Querier = (*Queries)(nil)
